{"version":3,"sources":["components/Button.js","components/Footer.js","components/Aside.js","components/Header.js","components/Card.js","components/Appointments.js","components/PatientCardItem.js","components/ECard.js","data/data.js","components/AllSign.js","components/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["Button","text","className","Footer","src","Aside","React","useState","isProfile","setProfile","isDoc","setDoc","isMessage","setMessage","isTest","setTest","isInfo","setInfo","to","onClick","Header","href","Card","time","name","hospital","spec","Appointments","data","speciality","url","length","PatientCardItem","title","isOn","handleMouseEnter","handleMouseLeave","onMouseOver","onMouseLeave","ECard","isOnInfo","setOnInfo","isOnTest","setOnTest","isOnAdd","setOnAdd","isOnHistory","setOnHistory","AllSign","Date","date","setDate","map","index","key","onChange","prev2Label","next2Label","value","NotFound","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uOAQeA,MANf,YAAyB,IAARC,EAAO,EAAPA,KACb,OACI,4BAAQC,UAAU,UAAUD,ICQrBE,MATf,WACI,OACI,yBAAKD,UAAU,UACX,uBAAGA,UAAU,gBAAb,wCACA,yBAAKA,UAAU,cAAcE,IAAI,qBC6E9BC,MA/Ef,WAAkB,IAAD,EAEmBC,IAAMC,UAAS,GAFlC,mBAENC,EAFM,KAEKC,EAFL,OAGWH,IAAMC,UAAS,GAH1B,mBAGNG,EAHM,KAGCC,EAHD,OAImBL,IAAMC,UAAS,GAJlC,mBAINK,EAJM,KAIKC,EAJL,OAKaP,IAAMC,UAAS,GAL5B,mBAKNO,EALM,KAKEC,EALF,OAMaT,IAAMC,UAAS,GAN5B,mBAMNS,EANM,KAMEC,EANF,KAgDb,OACI,2BAAOf,UAAU,SACb,wBAAIA,UAAU,eAAd,8CACA,wBAAIA,UAAU,eACV,wBAAIA,UAAS,+CAA0CM,GAAa,4BAChE,kBAAC,IAAD,CAAMU,GAAG,IAAIhB,UAAS,sBAAiBM,GAAa,2BAChDW,QA9CpB,WACIV,GAAW,GACXE,GAAO,GACPE,GAAW,GACXE,GAAQ,GACRE,GAAQ,KAwCI,+CAGJ,wBAAIf,UAAS,2CAAsCQ,GAAS,4BACxD,kBAAC,IAAD,CAAMQ,GAAG,OAAOhB,UAAS,sBAAiBQ,GAAS,2BAC/CS,QA1CpB,WACIR,GAAO,GACPF,GAAW,GACXI,GAAW,GACXE,GAAQ,GACRE,GAAQ,KAoCI,qFAGJ,wBAAIf,UAAS,+CAA0CU,GAAa,4BAChE,kBAAC,IAAD,CAAMM,GAAG,WAAWhB,UAAS,sBAAiBU,GAAa,2BACvDO,QAtCpB,WACIN,GAAW,GACXF,GAAO,GACPF,GAAW,GACXM,GAAQ,GACRE,GAAQ,KAgCI,2DAGJ,wBAAIf,UAAS,4CAAuCY,GAAU,4BAC1D,kBAAC,IAAD,CAAMI,GAAG,QAAQhB,UAAS,sBAAiBY,GAAU,2BACjDK,QAlCpB,WACIJ,GAAQ,GACRF,GAAW,GACXF,GAAO,GACPF,GAAW,GACXQ,GAAQ,KA4BI,6EAGJ,wBAAIf,UAAS,4CAAuCc,GAAU,4BAC1D,kBAAC,IAAD,CAAME,GAAG,QAAQhB,UAAS,sBAAiBc,GAAU,2BACjDG,QA9BpB,WACIF,GAAQ,GACRJ,GAAW,GACXF,GAAO,GACPF,GAAW,GACXM,GAAQ,KAwBI,+EAIR,kBAAC,EAAD,CAAQd,KAAM,8EACd,kBAAC,EAAD,QC5DGmB,MAjBf,WACI,OACI,4BAAQlB,UAAU,UACd,wBAAIA,UAAU,iBAAd,iEACA,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,gBACV,wBAAIA,UAAU,gBAAe,uBAAGmB,KAAK,IAAInB,UAAU,2CACnD,wBAAIA,UAAU,gBAAe,uBAAGmB,KAAK,IAAInB,UAAU,yCACnD,wBAAIA,UAAU,gBAAe,uBAAGmB,KAAK,IAAInB,UAAU,wCACnD,wBAAIA,UAAU,gBAAe,uBAAGmB,KAAK,IAAInB,UAAU,4CACnD,wBAAIA,UAAU,gBAAe,uBAAGmB,KAAK,IAAInB,UAAU,8CCUxDoB,MAnBf,YAAmD,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,KAAMtB,EAAM,EAANA,IACxC,OACI,yBAAKF,UAAU,QACX,yBAAKA,UAAU,cACf,wBAAIA,UAAU,eAAeqB,GAC7B,uBAAGrB,UAAU,cAAcuB,GACvB,yBAAKvB,UAAU,cACX,yBAAKA,UAAU,cAAcE,IAAG,uBAAkBA,KAClD,yBAAKF,UAAU,kBACX,wBAAIA,UAAU,cAAcsB,GAC5B,uBAAGtB,UAAU,oBAAoBwB,MAI7C,kBAAC,EAAD,CAAQzB,KAAM,uDCEX0B,MAff,YAA+B,IAARC,EAAO,EAAPA,KACnB,OACI,yBAAK1B,UAAU,gBACX,wBAAIA,UAAU,uBAAd,oFACA,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAMqB,KAAMK,EAAK,GAAGL,KAAMC,KAAMI,EAAK,GAAGJ,KAAMC,SAAUG,EAAK,GAAGH,SAAUC,KAAME,EAAK,GAAGC,WAAYzB,IAAKwB,EAAK,GAAGE,MACjH,kBAAC,EAAD,CAAMP,KAAMK,EAAK,GAAGL,KAAMC,KAAMI,EAAK,GAAGJ,KAAMC,SAAUG,EAAK,GAAGH,SAAUC,KAAME,EAAK,GAAGC,WAAYzB,IAAKwB,EAAK,GAAGE,MACjH,uBAAG5B,UAAU,sBAAb,sBACS0B,EAAKG,OAAS,EADvB,yCACiC,kBAAC,IAAD,CAAMb,GAAG,YAAYhB,UAAU,qBAA/B,8DCWlC8B,MArBf,YAAyF,IAA/DC,EAA8D,EAA9DA,MAAOhC,EAAuD,EAAvDA,KAAMuB,EAAiD,EAAjDA,KAAMU,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,iBAEjE,OACI,yBAAKlC,UAAU,SAASmC,YAAaF,EAAkBG,aAAcF,GACjE,yBAAKlC,UAAS,2CAAsCsB,EAAtC,YAA8CU,GAAQ,+BACpE,yBAAKhC,UAAS,uBAAkBgC,GAAQ,6BACpC,wBAAIhC,UAAS,wBAAmBgC,GAAQ,8BAAgCD,GAC7D,yHAAVA,EACD,wBAAI/B,UAAU,gBACV,wBAAIA,UAAU,kCAAd,sGACA,wBAAIA,UAAU,kCAAd,iHACA,wBAAIA,UAAU,kCAAd,gGAEJ,uBAAGA,UAAU,gBAAgBD,MCkD9BsC,MA9Df,WAAkB,IAAD,EAEiBjC,IAAMC,UAAS,GAFhC,mBAENiC,EAFM,KAEIC,EAFJ,OAGiBnC,IAAMC,UAAS,GAHhC,mBAGNmC,EAHM,KAGIC,EAHJ,OAIerC,IAAMC,UAAS,GAJ9B,mBAINqC,EAJM,KAIGC,EAJH,OAKuBvC,IAAMC,UAAS,GALtC,mBAKNuC,EALM,KAKOC,EALP,KAuBb,SAASX,IACLK,GAAU,GACVE,GAAU,GACVE,GAAS,GACTE,GAAa,GAGjB,OACI,yBAAK7C,UAAU,6BACX,wBAAIA,UAAU,uBAAd,oFACA,yBAAKA,UAAU,yCACX,kBAAC,EAAD,CAAiB+B,MAAO,uHACpBT,KAAM,OACNU,KAAMM,EACNL,iBA9BhB,WACIM,GAAU,IA8BEL,iBAAkBA,IACtB,kBAAC,EAAD,CAAiBH,MAAO,gHACpBhC,KAAM,qQACNuB,KAAM,OACNU,KAAMQ,EACNP,iBAhChB,WACIQ,GAAU,IAgCEP,iBAAkBA,IACtB,kBAAC,EAAD,CAAiBH,MAAO,gHACpBhC,KAAM,wUACNuB,KAAM,MACNU,KAAMU,EACNT,iBAlChB,WACIU,GAAS,IAkCGT,iBAAkBA,IACtB,kBAAC,EAAD,CAAiBH,MAAO,wFACpBhC,KAAM,gVACNuB,KAAM,UACNU,KAAMY,EACNX,iBApChB,WACIY,GAAa,IAoCDX,iBAAkBA,OCrBvBR,EAtCF,CACT,CACIJ,KAAM,6DACNK,WAAY,mDACZJ,SAAU,6TACVF,KAAM,sFACNO,IAAK,gBAET,CACIN,KAAM,6DACNK,WAAY,oJACZJ,SAAU,6TACVF,KAAM,sFACNO,IAAK,eAET,CACIN,KAAM,6DACNK,WAAY,mDACZJ,SAAU,6TACVF,KAAM,sFACNO,IAAK,gBAET,CACIN,KAAM,6DACNK,WAAY,oJACZJ,SAAU,6TACVF,KAAM,sFACNO,IAAK,eAET,CACIN,KAAM,6DACNK,WAAY,mDACZJ,SAAU,6TACVF,KAAM,sFACNO,IAAK,iB,cCGEkB,MA/Bf,YAA0B,IAARpB,EAAO,EAAPA,KAAO,EAEGrB,mBAAS,IAAI0C,MAFhB,mBAEdC,EAFc,KAERC,EAFQ,KAOrB,OACI,yBAAKjD,UAAU,YACX,wBAAIA,UAAU,mBAAkB,kBAAC,IAAD,CAAMgB,GAAG,IAAIhB,UAAU,kBAAvB,4DAChC,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACV0B,EAAKwB,KAAI,SAACxB,EAAMyB,GAAP,OACN,kBAAC,EAAD,CAAMC,IAAKD,EACP9B,KAAMK,EAAKL,KACXC,KAAMI,EAAKJ,KACXC,SAAUG,EAAKH,SACfC,KAAME,EAAKF,KACXtB,IAAKwB,EAAKE,UAGtB,yBAAK5B,UAAU,sBAAqB,kBAAC,IAAD,CAAUqD,SAlBzC,SAAAL,GACbC,EAAQD,IAkBIM,WAAY,GACZC,WAAY,GACZvD,UAAW,iBACXwD,MAAOR,QCrBZS,MARf,WACI,OACI,yBAAKzD,UAAU,aACX,wBAAIA,UAAU,oBAAd,mBC4BG0D,MAvBf,WACE,OACE,yBAAK1D,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAclC,KAAMA,IACpB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOkC,KAAK,aACV,kBAAC,EAAD,CAASlC,KAAMA,KAEjB,kBAAC,IAAD,CAAOkC,KAAK,KACV,kBAAC,EAAD,WCbIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cf758df7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Button({text}) {\r\n    return(\r\n        <button className=\"button\">{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport Button from './Button'\r\n\r\nfunction Footer() {\r\n    return(\r\n        <div className=\"footer\">\r\n            <p className=\"footer__text\">Помощь</p>\r\n            <img className=\"footer__img\" src=\"footer-img.png\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Button from './Button';\r\nimport Footer from './Footer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Aside() {\r\n\r\n    const [isProfile, setProfile] = React.useState(true);\r\n    const [isDoc, setDoc] = React.useState(false)\r\n    const [isMessage, setMessage] = React.useState(false)\r\n    const [isTest, setTest] = React.useState(false)\r\n    const [isInfo, setInfo] = React.useState(false)\r\n\r\n    function handleClickProfile() {\r\n        setProfile(true)\r\n        setDoc(false)\r\n        setMessage(false)\r\n        setTest(false)\r\n        setInfo(false)\r\n    }\r\n\r\n    function handleClickDoc() {\r\n        setDoc(true)\r\n        setProfile(false)\r\n        setMessage(false)\r\n        setTest(false)\r\n        setInfo(false)\r\n    }\r\n\r\n    function handleClickMessage() {\r\n        setMessage(true)\r\n        setDoc(false)\r\n        setProfile(false)\r\n        setTest(false)\r\n        setInfo(false)\r\n    }\r\n\r\n    function handleClickTest() {\r\n        setTest(true)\r\n        setMessage(false)\r\n        setDoc(false)\r\n        setProfile(false)\r\n        setInfo(false)\r\n    }\r\n\r\n    function handleClickInfo() {\r\n        setInfo(true)\r\n        setMessage(false)\r\n        setDoc(false)\r\n        setProfile(false)\r\n        setTest(false)\r\n    }\r\n\r\n    return(\r\n        <aside className=\"aside\">\r\n            <h2 className=\"aside__logo\">Логотип</h2>\r\n            <ul className=\"aside__list\">\r\n                <li className={`aside__item aside__item_type_profile ${isProfile && 'aside__item_type_active'}`}>\r\n                    <Link to='/' className={`aside__link ${isProfile && 'aside__link_type_active'}`} \r\n                        onClick={handleClickProfile}>Профиль</Link>\r\n                </li>\r\n                <li className={`aside__item aside__item_type_doc ${isDoc && 'aside__item_type_active'}`}>\r\n                    <Link to='/doc' className={`aside__link ${isDoc && 'aside__link_type_active'}`}\r\n                        onClick={handleClickDoc}>Врачи и клиники</Link>\r\n                </li>\r\n                <li className={`aside__item aside__item_type_message ${isMessage && 'aside__item_type_active'}`}>\r\n                    <Link to='/message' className={`aside__link ${isMessage && 'aside__link_type_active'}`}\r\n                        onClick={handleClickMessage}>Сообщения</Link>\r\n                </li>\r\n                <li className={`aside__item aside__item_type_test ${isTest && 'aside__item_type_active'}`}>\r\n                    <Link to='/test' className={`aside__link ${isTest && 'aside__link_type_active'}`}\r\n                        onClick={handleClickTest}>Тестирование</Link>\r\n                </li>\r\n                <li className={`aside__item aside__item_type_info ${isInfo && 'aside__item_type_active'}`}>\r\n                    <Link to='/info' className={`aside__link ${isInfo && 'aside__link_type_active'}`} \r\n                        onClick={handleClickInfo}>Полезно знать</Link>\r\n                </li>\r\n            </ul>\r\n            <Button text={\"Подать заявку\"}/>\r\n            <Footer />\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Aside;","import React from 'react'\r\n\r\nfunction Header() {\r\n    return(\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">Мой профиль</h1>\r\n            <nav className=\"header__navbar\">\r\n                <ul className=\"header__list\">\r\n                    <li className=\"header__item\"><a href=\"#\" className=\"header__link header__link_type_search\"></a></li>\r\n                    <li className=\"header__item\"><a href=\"#\" className=\"header__link header__link_type_bell\"></a></li>\r\n                    <li className=\"header__item\"><a href=\"#\" className=\"header__link header__link_type_eye\"></a></li>\r\n                    <li className=\"header__item\"><a href=\"#\" className=\"header__link header__link_type_profile\"></a></li>\r\n                    <li className=\"header__item\"><a href=\"#\" className=\"header__link header__link_type_arrow\"></a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Button from './Button';\r\n\r\nfunction Card({ time, name, hospital, spec, src}) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__info\">\r\n            <h2 className=\"card__title\">{time}</h2>\r\n            <p className=\"card__text\">{hospital}</p>\r\n                <div className=\"card__wrap\">\r\n                    <img className=\"card__image\" src={`../../public/${src}`}/>\r\n                    <div className=\"card__doc-info\">\r\n                        <h3 className=\"card__name\">{name}</h3>\r\n                        <p className=\"card__speciality\">{spec}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Button text={\"Отменить\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Appointments({data}) {\r\n    return(\r\n        <div className=\"profile-card\">\r\n            <h2 className=\"profile-card__title\">Запись на прием</h2>\r\n            <div className=\"profile-card__wrap\">\r\n                <Card time={data[0].time} name={data[0].name} hospital={data[0].hospital} spec={data[0].speciality} src={data[0].url}/>\r\n                <Card time={data[1].time} name={data[1].name} hospital={data[1].hospital} spec={data[1].speciality} src={data[1].url}/>\r\n                <p className=\"appointment__count\">\r\n                    Еще {data.length - 2} записи <Link to=\"/all-sign\" className=\"appointment__link\">Подробнее</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Appointments;","import React from 'react'\r\n\r\nfunction PatientCardItem({title, text, name, isOn, handleMouseEnter, handleMouseLeave}) {\r\n\r\n    return(\r\n        <div className=\"e-card\" onMouseOver={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n            <div className={`e-card__image e-card__image_type_${name} ${isOn && 'e-card__image_type_active'}`}></div>\r\n            <div className={`e-card__info ${isOn && 'e-card__info_type_active'}`}>\r\n                <h2 className={`e-card__title ${isOn && 'e-card__title_type_active'}`}>{title}</h2>\r\n                {title === 'Информация о пациенте' ? \r\n                <ul className=\"e-card__list\">\r\n                    <li className=\"e-card__list-item e-card__text\">Ваши личные данные</li>\r\n                    <li className=\"e-card__list-item e-card__text\">Рекомендации врачей</li>\r\n                    <li className=\"e-card__list-item e-card__text\">История болезней</li>\r\n                </ul> :\r\n                <p className=\"e-card__text\">{text}</p>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientCardItem;","import React, { useState } from 'react'\r\nimport PatientCardItem from './PatientCardItem';\r\n\r\nfunction ECard() {\r\n\r\n    const [isOnInfo, setOnInfo] = React.useState(false);\r\n    const [isOnTest, setOnTest] = React.useState(false);\r\n    const [isOnAdd, setOnAdd] = React.useState(false);\r\n    const [isOnHistory, setOnHistory] = React.useState(false)\r\n\r\n    function handleMouseEnterInfo() {\r\n        setOnInfo(true)\r\n    }\r\n\r\n    function handleMouseEnterTest() {\r\n        setOnTest(true)\r\n    }\r\n\r\n    function handleMouseEnterAdd() {\r\n        setOnAdd(true)\r\n    }\r\n\r\n    function handleMouseEnterHistory() {\r\n        setOnHistory(true)\r\n    }\r\n\r\n    function handleMouseLeave() {\r\n        setOnInfo(false)\r\n        setOnTest(false)\r\n        setOnAdd(false)\r\n        setOnHistory(false)\r\n    }\r\n\r\n    return(\r\n        <div className=\"profile-card patient-card\">\r\n            <h2 className=\"profile-card__title\">Запись на прием</h2>\r\n            <div className=\"profile-card__wrap patient-card__wrap\">\r\n                <PatientCardItem title={\"Информация о пациенте\"}\r\n                    name={\"info\"}\r\n                    isOn={isOnInfo}\r\n                    handleMouseEnter={handleMouseEnterInfo}\r\n                    handleMouseLeave={handleMouseLeave}/>\r\n                <PatientCardItem title={\"Результаты анализов\"}\r\n                    text={\"Вы можете узнать здесь результаты своих анализов\"}\r\n                    name={\"test\"}\r\n                    isOn={isOnTest}\r\n                    handleMouseEnter={handleMouseEnterTest}\r\n                    handleMouseLeave={handleMouseLeave}/>\r\n                <PatientCardItem title={\"Добавить информацию\"}\r\n                    text={\"Добавляйте в свою электронную медицинскую карту новые данные\"}\r\n                    name={\"add\"}\r\n                    isOn={isOnAdd}\r\n                    handleMouseEnter={handleMouseEnterAdd}\r\n                    handleMouseLeave={handleMouseLeave}/>\r\n                <PatientCardItem title={\"История приемов\"}\r\n                    text={\"Вся информация о полученных услугах за все время хранится здесь\"}\r\n                    name={\"history\"}\r\n                    isOn={isOnHistory}\r\n                    handleMouseEnter={handleMouseEnterHistory}\r\n                    handleMouseLeave={handleMouseLeave}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ECard;","const data = [\r\n    {\r\n        name: 'Малушко Т. Н.',\r\n        speciality: 'Хирургия',\r\n        hospital: 'СПБ ГБУЗ \"Городская поликлиника №25\", пр. Солидарности, д. 1, к. 1, лит. А',\r\n        time: 'Понедельник 15.06.20 | 15:30',\r\n        url: \"malushko.png\"\r\n    },\r\n    {\r\n        name: 'Харьков В. С.',\r\n        speciality: 'Терапевтическое отделение',\r\n        hospital: 'СПБ ГБУЗ \"Городская поликлиника №25\", пр. Солидарности, д. 1, к. 1, лит. А',\r\n        time: 'Понедельник 15.06.20 | 18:30',\r\n        url: \"charkov.png\"\r\n    },\r\n    {\r\n        name: 'Малушко Т. Н.',\r\n        speciality: 'Хирургия',\r\n        hospital: 'СПБ ГБУЗ \"Городская поликлиника №25\", пр. Солидарности, д. 1, к. 1, лит. А',\r\n        time: 'Понедельник 15.06.20 | 15:30',\r\n        url: \"malushko.png\"\r\n    },\r\n    {\r\n        name: 'Харьков В. С.',\r\n        speciality: 'Терапевтическое отделение',\r\n        hospital: 'СПБ ГБУЗ \"Городская поликлиника №25\", пр. Солидарности, д. 1, к. 1, лит. А',\r\n        time: 'Понедельник 15.06.20 | 18:30',\r\n        url: \"charkov.png\"\r\n    },\r\n    {\r\n        name: 'Малушко Т. Н.',\r\n        speciality: 'Хирургия',\r\n        hospital: 'СПБ ГБУЗ \"Городская поликлиника №25\", пр. Солидарности, д. 1, к. 1, лит. А',\r\n        time: 'Понедельник 15.06.20 | 15:30',\r\n        url: \"malushko.png\"\r\n    }\r\n]\r\n\r\nexport default data;","import React, { useState } from 'react';\r\nimport Card from './Card';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction AllSign({data}) {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const onChange = date => {\r\n        setDate(date)\r\n    }\r\n\r\n    return(\r\n        <div className=\"all-sign\">\r\n            <h2 className=\"all-sign__title\"><Link to=\"/\" className=\"all-sign__link\">Мои записи</Link></h2>\r\n            <div className=\"all-sign__wrap\">\r\n                <div className=\"all-sign__cards\">\r\n                    {data.map((data, index) => (\r\n                        <Card key={index}\r\n                            time={data.time}\r\n                            name={data.name}\r\n                            hospital={data.hospital}\r\n                            spec={data.spec}\r\n                            src={data.url} />\r\n                    ))}\r\n                </div>\r\n                <div className=\"all-sign__calendar\"><Calendar onChange={onChange}\r\n                    prev2Label={''}\r\n                    next2Label={''}\r\n                    className={'react-calendar'}\r\n                    value={date}/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllSign;","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h2 className=\"not-found__title\">404 not found</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Aside from './Aside';\r\nimport Header from './Header';\r\nimport Appointments from './Appointments';\r\nimport ECard from './ECard';\r\nimport data from '../data/data.js';\r\nimport AllSign from './AllSign';\r\nimport NotFound from './NotFound';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"page\">\r\n        <Aside />\r\n        <div className=\"wrap\">\r\n            <Header />\r\n            <Switch>\r\n              <Route exact path='/'>\r\n                <Appointments data={data}/>\r\n                <ECard />\r\n              </Route>\r\n              <Route path=\"/all-sign\">\r\n                <AllSign data={data} />\r\n              </Route>\r\n              <Route path=\"*\">\r\n                <NotFound />\r\n              </Route>\r\n            </Switch>       \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}